% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dataconnector.R
\name{csv2dataframe}
\alias{csv2dataframe}
\title{Load a CSV file into a data frame.}
\usage{
csv2dataframe(url, schema, delimiter = ",", commentCharacter = "#",
  hdfsConfigurationFile = paste(system.file(package = "dataconnector"),
  "/conf/hdfs.json", sep = ""), hdfsConfigurationStr = "", chunkStart = 0,
  chunkEnd = -1, skipHeader = FALSE)
}
\arguments{
\item{url}{File URL. Examples: '/tmp/file.csv', 'hdfs:///file.csv'.

                     We also support globbing. Examples: '/tmp/*.csv', 'hdfs:///tmp/*.csv'.

                     When globbing all CSV files need to have the same schema and delimiter.}

\item{schema}{Specifies the column names and types.

               Syntax is: \code{<col0-name>:<col0_type>,<col1-name>:<col1_type>,...<colN-name>:<colN_type>}.

               Supported types are: \code{logical}, \code{integer}, \code{int64}, \code{numeric} and \code{character}.

               Example: schema='age:int64,name:character'.

               Note that due to R not having a proper int64 type we convert it to an R numeric. Type conversion work as follows:

               \tabular{ll}{
                   CSV type  |\tab R type    \cr
                   -         |\tab -         \cr
                   integer   |\tab integer   \cr
                   numeric   |\tab numeric   \cr
                   logical   |\tab logical   \cr
                   int64     |\tab numeric   \cr
                   character |\tab character
               }}

\item{delimiter}{Column separator. Example: delimiter='|'. By default delimiter is ','.}

\item{commentCharacter}{Discard lines starting with this character. Leading spaces are ignored.}

\item{hdfsConfigurationFile}{By default: \code{paste(system.file(package='dataconnector'),'/conf/hdfs.json',sep='')}.

                             Options are:
                             \itemize{
                                 \item webhdfsPort: webhdfs port, integer
                                 \item hdfsPort: hdfs namenode port, integer
                                 \item hdfsHost: hdfs namenode host, string
                                 \item hdfsUser: hdfs username, string
                             }

                             An example file is:

                                 \{ \cr
                                 "webhdfsPort": 50070, \cr
                                 "hdfsPort": 9000, \cr
                                 "hdfsHost": "172.17.0.3", \cr
                                 "hdfsUser": "jorgem" \cr
                                 \}}

\item{hdfsConfigurationStr}{HDFS configuration in string format. Useful for Distributed R.
Normally users specify hdfsConfigurationFile instead of hdfsConfigurationStr.}

\item{chunkStart}{Byte offset in the file to start parsing. Defaults to 0.}

\item{chunkEnd}{Byte offset in the file to stop parsing. Defaults to file size.}

\item{skipHeader}{Treat first line as the CSV header and discard it.}
}
\value{
A dataframe representing the CSV file.
}
\description{
Load a CSV file into a data frame.
}
\examples{
df <- csv2dataframe(url=paste(system.file(package='dataconnector'),'/tests/testthat/data/csv/ex001.csv',sep=''), schema='a:int64,b:string')
}

