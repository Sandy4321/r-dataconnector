% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/hdfsConnector.R
\name{orc2dataframe}
\alias{orc2dataframe}
\title{Load an ORC file into a data frame}
\usage{
orc2dataframe(url, ...)
}
\arguments{
\item{url}{File URL. Examples: '/tmp/file.orc', 'hdfs:///file.orc'.}

\item{selectStripes}{ORC stripes to include. Stripes need to be consecutive.}

\item{fileType}{File type is determined automatically by the file extension.

                Users can use fileType to override it. Useful when files don't have extensions.}

\item{hdfsConfigurationFile}{By default: \code{paste(system.file(package='hdfsconnector'),'/conf/hdfs.json',sep='')}.

                             Options are:
                             \itemize{
                                 \item webhdfsPort: webhdfs port, integer
                                 \item hdfsPort: hdfs namenode port, integer
                                 \item hdfsHost: hdfs namenode host, string
                                 \item hdfsUser: hdfs username, string
                             }

                             An example file is:

                                 \{ \cr
                                 "webhdfsPort": 50070, \cr
                                 "hdfsPort": 9000, \cr
                                 "hdfsHost": "172.17.0.3", \cr
                                 "hdfsUser": "jorgem" \cr
                                 \}}

\item{hdfsConfigurationStr}{HDFS configuration in string format. Useful for Distributed R.
Normally users specify hdfsConfigurationFile instead of hdfsConfigurationStr.}
}
\value{
A dataframe representing the ORC file.
}
\description{
Type conversions work as follows:
               \tabular{ll}{
                   ORC type          |\tab R type        \cr
                   -                 |\tab -             \cr
                   byte/short/int    |\tab integer       \cr
                   float/double      |\tab numeric       \cr
                   long              |\tab numeric       \cr
                   bool              |\tab logical       \cr
                   string/binary     |\tab character     \cr
                   char/varchar      |\tab character     \cr
                   decimal           |\tab character     \cr
                   timestamp/date    |\tab character     \cr
                   union             |\tab not supported \cr
                   struct            |\tab dataframe     \cr
                   map               |\tab dataframe     \cr
                   list              |\tab list
               }
}
\examples{
df <- orc2dataframe(url=paste(system.file(package='hdfsconnector'),'/tests/testthat/data/orc/TestOrcFile.test1.orc',sep=''))
}

